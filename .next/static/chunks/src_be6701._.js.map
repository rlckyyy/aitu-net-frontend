{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/relucky/Desktop/programming/react/aitu-net-frontend/src/lib/friendsApi.ts"],"sourcesContent":["import {request} from \"@/lib/apiClient\";\nimport {FriendRequestStatus} from \"@/models/friend/FriendRequestStatus\";\nimport {FriendRequest} from \"@/models/friend/FriendRequest\";\nimport {User} from \"@/models/user\";\n\nexport const friendsApi = {\n    sendFriendRequest: async (userId: string) => {\n        return await request(`/friend/request/${userId}`, {method: 'POST'});\n    },\n    getReceivedFriendRequests: async (requestStatus: FriendRequestStatus) => {\n        return await request<FriendRequest[]>(`/friend/received`, {method: 'GET'});\n    },\n    getSentFriendRequests: async (requestStatus: FriendRequestStatus) => {\n        return await request<FriendRequest[]>(`/friend/sent`, {method: 'GET'});\n    },\n    deleteFriendRequest: async (requestId: string) => {\n        return await request(`/friend/${requestId}`, {method: 'DELETE'});\n    },\n    respondRequest: async (requestId: string, status: FriendRequestStatus) => {\n        return await request(`/friend/${requestId}/respond`, {method: 'POST', params: {status}});\n    },\n    getUserFriendList: async (userId: string) => {\n        return await request<User[]>(`/friend/${userId}`, {method: 'GET'});\n    }\n}"],"names":[],"mappings":";;;AAAA;;AAKO,MAAM,aAAa;IACtB,mBAAmB,OAAO;QACtB,OAAO,MAAM,CAAA,GAAA,0HAAA,CAAA,UAAO,AAAD,EAAE,CAAC,gBAAgB,EAAE,QAAQ,EAAE;YAAC,QAAQ;QAAM;IACrE;IACA,2BAA2B,OAAO;QAC9B,OAAO,MAAM,CAAA,GAAA,0HAAA,CAAA,UAAO,AAAD,EAAmB,CAAC,gBAAgB,CAAC,EAAE;YAAC,QAAQ;QAAK;IAC5E;IACA,uBAAuB,OAAO;QAC1B,OAAO,MAAM,CAAA,GAAA,0HAAA,CAAA,UAAO,AAAD,EAAmB,CAAC,YAAY,CAAC,EAAE;YAAC,QAAQ;QAAK;IACxE;IACA,qBAAqB,OAAO;QACxB,OAAO,MAAM,CAAA,GAAA,0HAAA,CAAA,UAAO,AAAD,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAE;YAAC,QAAQ;QAAQ;IAClE;IACA,gBAAgB,OAAO,WAAmB;QACtC,OAAO,MAAM,CAAA,GAAA,0HAAA,CAAA,UAAO,AAAD,EAAE,CAAC,QAAQ,EAAE,UAAU,QAAQ,CAAC,EAAE;YAAC,QAAQ;YAAQ,QAAQ;gBAAC;YAAM;QAAC;IAC1F;IACA,mBAAmB,OAAO;QACtB,OAAO,MAAM,CAAA,GAAA,0HAAA,CAAA,UAAO,AAAD,EAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE;YAAC,QAAQ;QAAK;IACpE;AACJ"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///Users/relucky/Desktop/programming/react/aitu-net-frontend/src/components/friends/list/ListFriends.tsx"],"sourcesContent":["'use client'\n\nimport {useAuth} from \"@/context/AuthProvider\";\nimport {useEffect, useState} from \"react\";\nimport {User} from \"@/models/user\";\nimport {friendsApi} from \"@/lib/friendsApi\";\n\nexport default function ListFriends() {\n    const {user} = useAuth()\n    const [friends, setFriends] = useState<User[]>([])\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n        if (!user?.id) return;\n\n        friendsApi.getUserFriendList(user.id)\n            .then(response => setFriends(response.data))\n            .catch(error => console.error(\"Error while getting friends:\", error))\n            .finally(() => setLoading(false));\n    }, [user]);\n    if (loading) return <p>Загрузка...</p>;\n\n    return (\n        <div>\n            <h2>Список друзей</h2>\n            <ul>\n                {friends.length > 0 ? (\n                    friends.map(friend => (\n                        <li key={friend.id}>{friend.email}</li>\n                    ))\n                ) : (\n                    <p>У вас пока нет друзей.</p>\n                )}\n            </ul>\n        </div>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;;;AALA;;;;AAOe,SAAS;;IACpB,MAAM,EAAC,IAAI,EAAC,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IACrB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACN,IAAI,CAAC,MAAM,IAAI;YAEf,2HAAA,CAAA,aAAU,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAC/B,IAAI;yCAAC,CAAA,WAAY,WAAW,SAAS,IAAI;wCACzC,KAAK;yCAAC,CAAA,QAAS,QAAQ,KAAK,CAAC,gCAAgC;wCAC7D,OAAO;yCAAC,IAAM,WAAW;;QAClC;gCAAG;QAAC;KAAK;IACT,IAAI,SAAS,qBAAO,6LAAC;kBAAE;;;;;;IAEvB,qBACI,6LAAC;;0BACG,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;0BACI,QAAQ,MAAM,GAAG,IACd,QAAQ,GAAG,CAAC,CAAA,uBACR,6LAAC;kCAAoB,OAAO,KAAK;uBAAxB,OAAO,EAAE;;;;8CAGtB,6LAAC;8BAAE;;;;;;;;;;;;;;;;;AAKvB;GA5BwB;;QACL,kIAAA,CAAA,UAAO;;;KADF"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}