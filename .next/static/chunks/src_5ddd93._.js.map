{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/relucky/Desktop/programming/react/aitu-net-frontend/src/lib/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api';\n\nconst apiClient = axios.create({\n    baseURL: API_URL,\n    withCredentials: true,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nasync function request(endpoint: string, options: any = {}) {\n    try {\n        const response = await apiClient.request({\n            url: endpoint,\n            ...options,\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Ошибка API', error);\n        throw error;\n    }\n}\n\nexport const api = {\n    register: (userData: {\n        username: string;\n        email: string;\n        password: string;\n    }) =>\n        request('/v1/auth/register', {\n            method: 'POST',\n            data: userData,\n        }),\n\n    login: async (userData: { email: string; password: string }) => {\n        return request('/v1/auth/login', {\n            method: 'POST',\n            data: userData,\n        });\n    },\n\n    getUser: () =>\n        request('/v1/auth/me', {\n            method: 'GET',\n        }),\n\n    logout: async () =>\n        await request('/v1/auth/logout', {\n            method: 'POST',\n        }),\n};\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,UAAU;AAEhB,MAAM,YAAY,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC3B,SAAS;IACT,iBAAiB;IACjB,SAAS;QACL,gBAAgB;IACpB;AACJ;AAEA,eAAe,QAAQ,QAAgB,EAAE,UAAe,CAAC,CAAC;IACtD,IAAI;QACA,MAAM,WAAW,MAAM,UAAU,OAAO,CAAC;YACrC,KAAK;YACL,GAAG,OAAO;QACd;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,cAAc;QAC5B,MAAM;IACV;AACJ;AAEO,MAAM,MAAM;IACf,UAAU,CAAC,WAKP,QAAQ,qBAAqB;YACzB,QAAQ;YACR,MAAM;QACV;IAEJ,OAAO,OAAO;QACV,OAAO,QAAQ,kBAAkB;YAC7B,QAAQ;YACR,MAAM;QACV;IACJ;IAEA,SAAS,IACL,QAAQ,eAAe;YACnB,QAAQ;QACZ;IAEJ,QAAQ,UACJ,MAAM,QAAQ,mBAAmB;YAC7B,QAAQ;QACZ;AACR"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/relucky/Desktop/programming/react/aitu-net-frontend/src/app/Logout.tsx"],"sourcesContent":["'use client';\n\nimport { useRouter } from 'next/navigation';\nimport { api } from '../lib/api';\n\nexport const LogoutButton = () => {\n    const router = useRouter();\n\n    const handleLogout = async (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n        await api.logout();\n\n        router.refresh();\n        router.replace('/auth/login');\n    };\n\n    return (\n        <button\n            type=\"button\"\n            onClick={handleLogout}\n            className=\"bg-red-500 text-white px-4 py-2 rounded\"\n        >\n            Выйти\n        </button>\n    );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKO,MAAM,eAAe;;IACxB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAO;QACxB,MAAM,cAAc;QACpB,MAAM,oHAAA,CAAA,MAAG,CAAC,MAAM;QAEhB,OAAO,OAAO;QACd,OAAO,OAAO,CAAC;IACnB;IAEA,qBACI,6LAAC;QACG,MAAK;QACL,SAAS;QACT,WAAU;kBACb;;;;;;AAIT;GApBa;;QACM,qIAAA,CAAA,YAAS;;;KADf"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///Users/relucky/Desktop/programming/react/aitu-net-frontend/src/context/AuthProvider.tsx"],"sourcesContent":["'use client';\n\nimport { api } from '@/lib/api';\nimport { User } from '@/models/user';\nimport {\n    createContext,\n    ReactNode,\n    useContext,\n    useEffect,\n    useState,\n} from 'react';\n\ninterface AuthContextType {\n    currentUser: User | null;\n    loginUser: (userData: { email: string; password: string }) => Promise<void>;\n    logout: () => void;\n    register: (userData: {\n        email: string;\n        username: string;\n        password: string;\n    }) => void;\n}\n\ninterface AuthProviderProps {\n    children: ReactNode;\n}\nexport const AuthContext = createContext<AuthContextType | undefined>(\n    undefined\n);\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n    const [user, setUser] = useState<User | null>(null);\n\n    useEffect(() => {\n        getUser();\n    }, []);\n\n    const loginUser = async (userData: { email: string; password: string }) => {\n        try {\n            const response = await api.login(userData);\n            if (response.status === 200) {\n                await getUser();\n            }\n        } catch (error) {\n            console.error('Login failed:', error);\n        }\n    };\n\n    const logout = async () => {\n        try {\n            await api.logout();\n            setUser(null);\n            console.log('Logout successful');\n        } catch (error: any) {\n            console.error(\n                'Logout failed:',\n                error.response?.data?.message || error.message\n            );\n        }\n    };\n\n    const register = async (userData: {\n        email: string;\n        username: string;\n        password: string;\n    }) => {\n        try {\n            const response = await api.register(userData);\n            console.log('Registration successful:', response.data);\n        } catch (error: any) {\n            console.error(\n                'Registration failed:',\n                error.response?.data?.message || error.message\n            );\n        }\n    };\n\n    const getUser = async () => {\n        try {\n            const response = await api.getUser();\n            console.log('Response of ME', response);\n            if (response.status === 200) {\n                setUser(response.data);\n            }\n        } catch (error) {\n            console.error('Failed to fetch user:', error);\n        }\n    };\n\n    return (\n        <AuthContext.Provider\n            value={{ currentUser: user, loginUser, logout, register }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n}\n\nexport function useAuth() {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n\n    return context;\n}\n"],"names":[],"mappings":";;;;;;AAEA;AAEA;;;AAJA;;;AA0BO,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EACnC;AAGG,SAAS,aAAa,EAAE,QAAQ,EAAqB;;IACxD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAE9C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACN;QACJ;iCAAG,EAAE;IAEL,MAAM,YAAY,OAAO;QACrB,IAAI;YACA,MAAM,WAAW,MAAM,oHAAA,CAAA,MAAG,CAAC,KAAK,CAAC;YACjC,IAAI,SAAS,MAAM,KAAK,KAAK;gBACzB,MAAM;YACV;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,iBAAiB;QACnC;IACJ;IAEA,MAAM,SAAS;QACX,IAAI;YACA,MAAM,oHAAA,CAAA,MAAG,CAAC,MAAM;YAChB,QAAQ;YACR,QAAQ,GAAG,CAAC;QAChB,EAAE,OAAO,OAAY;YACjB,QAAQ,KAAK,CACT,kBACA,MAAM,QAAQ,EAAE,MAAM,WAAW,MAAM,OAAO;QAEtD;IACJ;IAEA,MAAM,WAAW,OAAO;QAKpB,IAAI;YACA,MAAM,WAAW,MAAM,oHAAA,CAAA,MAAG,CAAC,QAAQ,CAAC;YACpC,QAAQ,GAAG,CAAC,4BAA4B,SAAS,IAAI;QACzD,EAAE,OAAO,OAAY;YACjB,QAAQ,KAAK,CACT,wBACA,MAAM,QAAQ,EAAE,MAAM,WAAW,MAAM,OAAO;QAEtD;IACJ;IAEA,MAAM,UAAU;QACZ,IAAI;YACA,MAAM,WAAW,MAAM,oHAAA,CAAA,MAAG,CAAC,OAAO;YAClC,QAAQ,GAAG,CAAC,kBAAkB;YAC9B,IAAI,SAAS,MAAM,KAAK,KAAK;gBACzB,QAAQ,SAAS,IAAI;YACzB;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,yBAAyB;QAC3C;IACJ;IAEA,qBACI,6LAAC,YAAY,QAAQ;QACjB,OAAO;YAAE,aAAa;YAAM;YAAW;YAAQ;QAAS;kBAEvD;;;;;;AAGb;GAlEgB;KAAA;AAoET,SAAS;;IACZ,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACV,MAAM,IAAI,MAAM;IACpB;IAEA,OAAO;AACX;IAPgB"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}